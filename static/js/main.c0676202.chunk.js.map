{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleTableRow.tsx","components/PeopleTableBody.tsx","components/PeopleTableHeader.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navigation.tsx","components/Layout.tsx","AppRouting.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTableRow","person","isSelectedPerson","useParams","slug","isWoman","sex","classNames","to","name","born","died","mother","motherName","father","fatherName","PeopleTableBody","people","peopleWithParents","map","find","p","includes","PeopleTableHeader","titles","title","headersPersonTable","PeopleTable","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","isNotPeople","length","NotFoundPage","PageNavLink","isActive","Navigation","role","Layout","AppRouting","path","element","index","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c0676202.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ninterface PeopleTableRowProps {\n  person: Person,\n}\n\nexport const PeopleTableRow: FC<PeopleTableRowProps> = ({\n  person,\n}) => {\n  const { slug } = useParams();\n  const isSelectedPerson = slug === person.slug;\n  const isWoman = person.sex === 'f';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        'has-background-warning': isSelectedPerson,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames({\n            'has-text-danger': isWoman,\n          })}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <Link\n              to={`/people/${person.mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          )\n          : (person.motherName || '-')}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <Link to={`/people/${person.father.slug}`}>\n              {person.fatherName}\n            </Link>\n          )\n          : (person.fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PeopleTableRow } from './PeopleTableRow';\n\ninterface PeopleTableBodyProps {\n  people: Person [],\n}\n\nexport const PeopleTableBody\n: FC<PeopleTableBodyProps> = ({ people }) => {\n  const peopleWithParents = people.map(person => {\n    const mother = people\n      .find(p => person.motherName?.includes(p.name));\n    const father = people\n      .find(p => person.fatherName?.includes(p.name));\n\n    return ({\n      ...person,\n      mother,\n      father,\n    });\n  });\n\n  return (\n    <tbody>\n      {peopleWithParents.map(person => (\n        <PeopleTableRow key={person.slug} person={person} />\n      ))}\n    </tbody>\n  );\n};\n","import { FC } from 'react';\n\ninterface PeopleTableHeaderProps {\n  titles: string[]\n}\n\nexport const PeopleTableHeader: FC<PeopleTableHeaderProps> = ({ titles }) => (\n  <thead>\n    <tr>\n      {titles.map(title => (\n        <th key={title}>{title}</th>\n      ))}\n    </tr>\n  </thead>\n);\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PeopleTableBody } from './PeopleTableBody';\nimport { PeopleTableHeader } from './PeopleTableHeader';\n\nconst headersPersonTable = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\ninterface PeopleTableProps {\n  people: Person[]\n}\n\nexport const PeopleTable: FC<PeopleTableProps> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <PeopleTableHeader titles={headersPersonTable} />\n\n      <PeopleTableBody people={people} />\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isNotPeople = !isLoading && !isError && people.length === 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNotPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface PageNavLinkProps {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: FC<PageNavLinkProps> = ({ to, title }) => (\n  <NavLink\n    className={\n      ({ isActive }) => classNames(\n        'navbar-item', {\n          'is-active': isActive,\n          'has-background-grey-lighter': isActive,\n        },\n      )\n    }\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navigation } from './Navigation';\n\nexport const Layout = () => (\n  <>\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Layout } from './components/Layout';\n\nexport const AppRouting = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import './App.scss';\nimport { AppRouting } from './AppRouting';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <AppRouting />\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <App />,\n  );\n"],"sourceRoot":""}