{"version":3,"sources":["components/PageNavLink.tsx","components/NavBar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleTableHeader.tsx","components/PeopleTableBody.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","AppRouting.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","NavBar","role","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTableHeader","createLink","name","born","toLowerCase","replaceAll","PeopleTableBody","people","personInfo","useParams","selectedPerson","useMemo","find","person","preparedPersonInfo","includes","map","isSelectedPerson","slug","motherInfo","p","motherName","fatherInfo","fatherName","sex","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","isHasError","setIsHasError","useEffect","catch","finally","isNotPeople","length","NotFoundPage","AppRouting","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e796c18.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface PageNavLinkProps {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: FC<PageNavLinkProps> = ({ to, title }) => (\n  <NavLink\n    className={\n      ({ isActive }) => classNames(\n        'navbar-item', {\n          'is-active': isActive,\n          'has-background-grey-lighter': isActive,\n        },\n      )\n    }\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const PeopleTableHeader = () => (\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Born</th>\n      <th>Died</th>\n      <th>Mother</th>\n      <th>Father</th>\n    </tr>\n  </thead>\n);\n","import { FC, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface PeopleTableBodyProps {\n  people: Person [],\n}\n\nconst createLink = (name: string, born: number) => {\n  return `${name.toLowerCase().replaceAll(' ', '-')}-${born}`;\n};\n\nexport const PeopleTableBody\n: FC<PeopleTableBodyProps> = ({ people }) => {\n  const { personInfo } = useParams();\n\n  const selectedPerson = useMemo(() => people\n    .find(person => {\n      const preparedPersonInfo = createLink(person.name, person.born);\n\n      return personInfo?.includes(preparedPersonInfo);\n    }), [personInfo]);\n\n  return (\n    <tbody>\n      {people.map(person => {\n        const isSelectedPerson = selectedPerson?.slug\n          .includes(person.slug);\n\n        const motherInfo = people\n          .find(p => person.motherName?.includes(p.name));\n\n        const fatherInfo = people\n          .find(p => person.fatherName?.includes(p.name));\n\n        return (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': isSelectedPerson,\n            })}\n          >\n            <td>\n              <Link\n                className={classNames({\n                  'has-text-danger': person.sex === 'f',\n                })}\n                to={`/people/${createLink(person.name, person.born)}`}\n              >\n                {person.name}\n              </Link>\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              { motherInfo && (\n                <Link\n                  to={`/people/${createLink(motherInfo.name, motherInfo.born)}`}\n                  className={classNames({\n                    'has-text-danger': motherInfo,\n                  })}\n                >\n                  {person.motherName}\n                </Link>\n              )}\n              {person.motherName && !motherInfo && (\n                <>{person.motherName}</>)}\n              {!person.motherName && '-'}\n            </td>\n            <td>\n              { fatherInfo && (\n                <Link\n                  to={`/people/${createLink(fatherInfo.name, fatherInfo.born)}`}\n                >\n                  {person.fatherName}\n                </Link>\n              )}\n              {person.fatherName && !fatherInfo && (\n                <>{person.fatherName}</>)}\n              {!person.fatherName && '-'}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTableHeader } from '../components/PeopleTableHeader';\nimport { PeopleTableBody } from '../components/PeopleTableBody';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isHasError, setIsHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isNotPeople = !isLoading && !isHasError && people.length === 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isHasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNotPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <PeopleTableHeader />\n\n              <PeopleTableBody people={people} />\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const AppRouting = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n            <Route path=\"/people/:personInfo\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { AppRouting } from './AppRouting';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <AppRouting />,\n  );\n"],"sourceRoot":""}